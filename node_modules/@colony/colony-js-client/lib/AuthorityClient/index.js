'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _colonyJsContractClient = require('@colony/colony-js-contract-client');

var _colonyJsContractClient2 = _interopRequireDefault(_colonyJsContractClient);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AuthorityClient = function (_ContractClient) {
  (0, _inherits3.default)(AuthorityClient, _ContractClient);

  function AuthorityClient() {
    (0, _classCallCheck3.default)(this, AuthorityClient);
    return (0, _possibleConstructorReturn3.default)(this, (AuthorityClient.__proto__ || Object.getPrototypeOf(AuthorityClient)).apply(this, arguments));
  }

  (0, _createClass3.default)(AuthorityClient, [{
    key: 'initializeContractMethods',
    value: function initializeContractMethods() {
      var user = ['user', 'address'];
      var role = ['role', 'authorityRole'];

      this.addCaller('getUserRole', {
        input: [user],
        output: [role],
        functionName: 'getUserRoles'
      });
      this.addCaller('hasUserRole', {
        input: [user, role],
        output: [['hasRole', 'boolean']]
      });
      this.addSender('setUserRole', {
        input: [user, role, ['enabled', 'boolean', true]]
      });
    }
  }], [{
    key: 'defaultQuery',

    /*
    For the given user's address and role, return true if the user has that role.
    */
    get: function get() {
      return {
        contractName: 'Authority'
      };
    }
    /*
    Enable or disable a particular role for a user's address (default behaviour: enable the role).
    */

    /*
    Get the given user's role.
    */

  }]);
  return AuthorityClient;
}(_colonyJsContractClient2.default);

exports.default = AuthorityClient;
//# sourceMappingURL=index.js.map