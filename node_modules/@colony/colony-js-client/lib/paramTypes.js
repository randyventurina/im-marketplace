'use strict';

var _colonyJsUtils = require('@colony/colony-js-utils');

var _colonyJsContractClient = require('@colony/colony-js-contract-client');

var _constants = require('./constants');

var roleType = function roleType(roles) {
  return {
    validate: function validate(value) {
      return Object.hasOwnProperty.call(roles, value);
    },
    convertInput: function convertInput(value) {
      return roles[value];
    },
    convertOutput: function convertOutput(value) {
      var roleNumber = (0, _colonyJsUtils.isBigNumber)(value) ? value.toNumber() : value;
      return Object.keys(roles).find(function (name) {
        return roles[name] === roleNumber;
      }) || null;
    }
  };
};

(0, _colonyJsContractClient.addParamType)('role', roleType(_constants.ROLES));

(0, _colonyJsContractClient.addParamType)('authorityRole', roleType(_constants.AUTHORITY_ROLES));

// Either a valid address, or an empty address to indicate ether
// (0x0 or 0x0000000000000000000000000000000000000000)
(0, _colonyJsContractClient.addParamType)('payableAddress', {
  validate: function validate(value) {
    return (0, _colonyJsUtils.isValidAddress)(value) || (0, _colonyJsUtils.isEmptyHexString)(value);
  },
  convertInput: function convertInput(value) {
    return (0, _colonyJsUtils.isValidAddress)(value) ? value : _constants.EMPTY_ADDRESS;
  },
  convertOutput: function convertOutput(value) {
    return value;
  }
});
//# sourceMappingURL=paramTypes.js.map