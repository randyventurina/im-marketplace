{"version":3,"sources":["../../src/mocks/MockEmittingContract.js"],"names":["MockEmittingContract","_listeners","name","callback","push","filter","listener","data","forEach","event","args"],"mappings":";;;;;;;;;;;;;;;;IAGqBA,oB;;;SACnBC,U,GAAa,E;;;;;gCAEDC,I,EAAcC,Q,EAAyB;AACjD,WAAKF,UAAL,CAAgBG,IAAhB,CAAqB,EAAEF,UAAF,EAAQC,kBAAR,EAArB;AACD;;;mCAEcD,I,EAAcC,Q,EAAyB;AACpD,WAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,MAAhB,CAChB;AAAA,eAAYC,SAASJ,IAAT,KAAkBA,IAAlB,IAA0BI,SAASH,QAAT,KAAsBA,QAA5D;AAAA,OADgB,CAAlB;AAGD;;;mCAEcD,I,EAAcK,I,EAAc;AACzC,WAAKN,UAAL,CACGI,MADH,CACU;AAAA,eAAYC,SAASJ,IAAT,KAAkBA,IAA9B;AAAA,OADV,EAEGM,OAFH,CAEW;AAAA,eACPF,SAASH,QAAT,CAAkB;AAChBM,iBAAOP,IADS;AAEhBQ,gBAAMH;AAFU,SAAlB,CADO;AAAA,OAFX;AAQD;;;;;kBAtBkBP,oB","file":"MockEmittingContract.js","sourcesContent":["// @flow\nimport type { EventCallback } from '@colony/colony-js-adapter';\n\nexport default class MockEmittingContract {\n  _listeners = [];\n\n  addListener(name: string, callback: EventCallback) {\n    this._listeners.push({ name, callback });\n  }\n\n  removeListener(name: string, callback: EventCallback) {\n    this._listeners = this._listeners.filter(\n      listener => listener.name !== name || listener.callback !== callback,\n    );\n  }\n\n  _dispatchEvent(name: string, data: Object) {\n    this._listeners\n      .filter(listener => listener.name === name)\n      .forEach(listener =>\n        listener.callback({\n          event: name,\n          args: data,\n        }),\n      );\n  }\n}\n"]}