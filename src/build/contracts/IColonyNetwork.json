{
  "contractName": "IColonyNetwork",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "colonyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "colonyAddress",
          "type": "address"
        }
      ],
      "name": "ColonyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "skillId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "parentSkillId",
          "type": "uint256"
        }
      ],
      "name": "SkillAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "auction",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMetaColony",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getColonyCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parentSkillId",
          "type": "uint256"
        },
        {
          "name": "_globalSkill",
          "type": "bool"
        }
      ],
      "name": "addSkill",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_skillId",
          "type": "uint256"
        }
      ],
      "name": "getSkill",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_skillId",
          "type": "uint256"
        }
      ],
      "name": "isGlobalSkill",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "int256"
        },
        {
          "name": "_skillId",
          "type": "uint256"
        }
      ],
      "name": "appendReputationUpdateLog",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSkillCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRootGlobalSkillId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "createMetaColony",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "createColony",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_version",
          "type": "uint256"
        },
        {
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "addColonyVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getColony",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentColonyVersion",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_newVersion",
          "type": "uint256"
        }
      ],
      "name": "upgradeColony",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_skillId",
          "type": "uint256"
        },
        {
          "name": "_parentSkillIndex",
          "type": "uint256"
        }
      ],
      "name": "getParentSkillId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_skillId",
          "type": "uint256"
        },
        {
          "name": "_childSkillIndex",
          "type": "uint256"
        }
      ],
      "name": "getChildSkillId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "getReputationMiningCycle",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_version",
          "type": "uint256"
        }
      ],
      "name": "getColonyVersionResolver",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakedBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newHash",
          "type": "bytes32"
        },
        {
          "name": "newNNodes",
          "type": "uint256"
        },
        {
          "name": "stakers",
          "type": "address[]"
        }
      ],
      "name": "setReputationRootHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startNextCycle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "stakers",
          "type": "address[]"
        }
      ],
      "name": "punishStakers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReputationRootHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReputationRootHashNNodes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "startTokenAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n  This file is part of The Colony Network.\n\n  The Colony Network is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  The Colony Network is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with The Colony Network. If not, see <http://www.gnu.org/licenses/>.\n*/\n\npragma solidity ^0.4.23;\npragma experimental \"v0.5.0\";\n\n\n/// @title Colony Network interface\n/// @notice All publicly available functions are available here and registered to work with EtherRouter Network contract\ncontract IColonyNetwork {\n\n  /// @notice Event logged when a new colony is added\n  /// @dev Emitted from `IColonyNetwork.createColony` function\n  /// @param colonyId The colony id in the network\n  /// @param colonyAddress The colony address in the network\n  event ColonyAdded(uint256 indexed colonyId, address indexed colonyAddress);\n\n  /// @notice Event logged when a new skill is added\n  /// @dev Emitted from `IColonyNetwork.addSkill` function\n  /// @param skillId The skill id\n  /// @param parentSkillId The id of the parent skill under which this new skill is added\n  event SkillAdded(uint256 skillId, uint256 parentSkillId);\n\n  /// @notice Event logged when a new auction is created and started\n  /// @dev Emitted from `IColonyNetwork.startTokenAuction` function\n  /// @param auction Address of the created auction contract\n  /// @param token Address of the token for auction\n  /// @param quantity Quantity of `token` to auction\n  event AuctionCreated(address auction, address token, uint256 quantity);\n\n  /// @notice Get the Meta Colony address\n  /// @return The Meta colony address, if no colony was found, returns 0x0\n  function getMetaColony() public view returns (address);\n\n  /// @notice Get the number of colonies in the network\n  /// @return The colony count\n  function getColonyCount() public view returns (uint256);\n\n  /// @notice Adds a new skill to the global or local skills tree, under skill `_parentSkillId`\n  /// Only the Meta Colony is allowed to add a global skill, called via `IColony.addGlobalSkill`\n  /// Any colony is allowed to add a local skill and which is associated with a new domain via `IColony.addDomain`\n  /// @dev Errors if the parent skill does not exist or if this is called by an unauthorised sender\n  /// @param _parentSkillId Id of the skill under which the new skill will be added\n  /// @param _globalSkill true if the new skill is global, false if it is local\n  /// @return Id of the added skill\n  function addSkill(uint256 _parentSkillId, bool _globalSkill) public returns (uint256);\n\n  /// @notice Get the `nParents` and `nChildren` of skill with id `_skillId`\n  /// @param _skillId Id of the skill\n  /// @return uint256 `skill.nParents` i.e. the number of parent skills of skill with id `_skillId`\n  /// @return uint256 `skill.nChildren` i.e. the number of child skills of skill with id `_skillId`\n  function getSkill(uint256 _skillId) public view returns (uint256, uint256);\n\n  /// @notice Checks if skill with id `_skillId` is a global skill\n  /// @param _skillId Id of the skill\n  /// @return true if skill with id `_skillId` is a global skill, false otherwise\n  function isGlobalSkill(uint256 _skillId) public view returns (bool);\n\n  /// @notice Adds a reputation update entry to log\n  /// @dev Errors if it is called by anyone but a colony or if skill with id `_skillId` does not exist or\n  /// @param _user The address of the user for the reputation update\n  /// @param _amount The amount of reputation change for the update, this can be a negative as well as a positive value\n  /// @param _skillId The skill for the reputation update\n  function appendReputationUpdateLog(address _user, int256 _amount, uint256 _skillId) public;\n\n  /// @notice Get the number of skills in the network including both global and local skills\n  /// @return The skill count\n  function getSkillCount() public view returns (uint256);\n\n  /// @notice Get the id of the root global skill\n  /// @dev This is set once when the Meta Colony is created\n  /// @return The root global skill id\n  function getRootGlobalSkillId() public view returns (uint256);\n\n  /// @notice Create the Meta Colony, same as a normal colony plus the root skill\n  /// @param _tokenAddress Address of the CLNY token\n  function createMetaColony(address _tokenAddress) public;\n\n  /// @notice Creates a new colony in the network\n  /// Note that the token ownership (if there is one) has to be transferred to the newly created colony\n  /// @param _tokenAddress Address of an ERC20 token to serve as the colony token\n  /// Additionally token can optionally support `mint` as defined in `ERC20Extended`\n  /// Support for `mint` in mandatory only for the Meta Colony Token\n  /// @return Address of the newly created colony\n  function createColony(address _tokenAddress) public returns (address);\n\n  /// @notice Adds a new Colony contract version and the address of associated `_resolver` contract. Secured function to authorised members\n  /// @param _version The new Colony contract version\n  /// @param _resolver Address of the `Resolver` contract which will be used with the underlying `EtherRouter` contract\n  function addColonyVersion(uint256 _version, address _resolver) public;\n\n  /// @notice Get a colony address by its Id in the network\n  /// @param _id Id of the colony to get\n  /// @return The colony address, if no colony was found, returns 0x0\n  function getColony(uint256 _id) public view returns (address);\n\n  /// @notice Returns the latest Colony contract version. This is the version used to create all new colonies\n  /// @return The current / latest Colony contract version\n  function getCurrentColonyVersion() public view returns (uint256);\n\n  /// @notice Upgrades a colony with identifier: `_id` to a new Colony contract version `_newVersion`\n  /// @dev Downgrades are not allowed, i.e. `_newVersion` should be higher than the currect colony version\n  /// @param _id The colony identifier in the network\n  /// @param _newVersion The target version for the upgrade\n  function upgradeColony(uint256 _id, uint _newVersion) public;\n\n  /// @notice Get the id of the parent skill at index `_parentSkillIndex` for skill with Id `_skillId`\n  /// @param _skillId Id of the skill\n  /// @param _parentSkillIndex Index of the `skill.parents` array to get\n  /// Note that not all parent skill ids are stored here. See `Skill.parents` member for definition on which parents are stored\n  /// @return Skill Id of the requested parent skill\n  function getParentSkillId(uint256 _skillId, uint256 _parentSkillIndex) public view returns (uint256);\n\n  /// @notice Get the id of the child skill at index `_childSkillIndex` for skill with Id `_skillId`\n  /// @param _skillId Id of the skill\n  /// @param _childSkillIndex Index of the `skill.children` array to get\n  /// @return Skill Id of the requested child skill\n  function getChildSkillId(uint256 _skillId, uint256 _childSkillIndex) public view returns (uint256);\n\n  /// @notice Get the address of either the active or inactive reputation mining cycle, based on `active`. The active reputation mining cycle\n  /// is the one currently under consideration by reputation miners. The inactive reputation cycle is the one with the log that is being appended to\n  /// @param _active Whether the user wants the active or inactive reputation mining cycle\n  /// @return address of active or inactive ReputationMiningCycle\n  function getReputationMiningCycle(bool _active) public view returns (address);\n\n  /// @notice Get the `Resolver` address for Colony contract version `_version`\n  /// @param _version The Colony contract version\n  /// @return Address of the `Resolver` contract\n  function getColonyVersionResolver(uint256 _version) public view returns (address);\n\n  /// @notice Allow a reputation miner to stake an `_amount` of CLNY tokens, which is required\n  /// before they can submit a new reputation root hash via `ReputationMiningCycle.submitNewHash`\n  /// @dev The Colony Network has to be authorised to transfer the `_amount` on behalf of the user prior to this call\n  /// @param _amount Number of CLNY tokens to stake\n  function deposit(uint256 _amount) public;\n\n  /// @notice Allow a user who has staked CLNY tokens to withdraw them\n  /// @dev Errors if the user has submitted a new reputation root hash or backed one someone else submitted in the current mining cycle\n  /// @param amount CLNY tokens amount to withdraw\n  function withdraw(uint256 amount) public;\n\n  /// @notice Get the amount of staked CLNY tokens for user `_user`\n  /// @param _user Address of the user whose balance we want to get\n  /// @return User stake balance\n  function getStakedBalance(address _user) public view returns (uint256);\n\n  /// @notice Set a new Reputation root hash and starts a new mining cycle. Can only be called by the ReputationMiningCycle contract.\n  /// @param newHash The reputation root hash\n  /// @param newNNodes The updated nodes count value\n  /// @param stakers Array of users who submitted or backed the hash, being accepted here as the new reputation root hash\n  function setReputationRootHash(bytes32 newHash, uint256 newNNodes, address[] stakers) public;\n\n  /// @notice Starts a new Reputation Mining cycle. Explicitly called only the first time,\n  /// subsequently called from within `setReputationRootHash`\n  function startNextCycle() public;\n\n  /// @notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect\n  /// @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n  /// @param stakers Array of the addresses of stakers to punish\n  function punishStakers(address[] stakers) public;\n\n  /// @notice Get the root hash of the current reputation state tree\n  /// @return bytes32 The current Reputation Root Hash\n  function getReputationRootHash() public view returns (bytes32);\n\n  /// @notice Get the number of nodes in the current reputation state tree.\n  /// @dev I cannot see a reason why a user's client would need to call this - only stored to help with some edge cases in reputation mining dispute resolution\n  /// @return uint256 The number of nodes in the state tree\n  function getReputationRootHashNNodes() public view returns (uint256);\n\n  /// @notice Create and start a new `DutchAuction` for the entire amount of `_token` owned by the Colony Network\n  /// @param _token Address of the token held by the network to be auctioned\n  function startTokenAuction(address _token) public;\n}\n",
  "sourcePath": "/root/intuition-machine/colonyNetwork/contracts/IColonyNetwork.sol",
  "ast": {
    "absolutePath": "/root/intuition-machine/colonyNetwork/contracts/IColonyNetwork.sol",
    "exportedSymbols": {
      "IColonyNetwork": [
        5976
      ]
    },
    "id": 5977,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5779,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:13"
      },
      {
        "id": 5780,
        "literals": [
          "experimental",
          "v0.5.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "725:29:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Colony Network interface\n @notice All publicly available functions are available here and registered to work with EtherRouter Network contract",
        "fullyImplemented": false,
        "id": 5976,
        "linearizedBaseContracts": [
          5976
        ],
        "name": "IColonyNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new colony is added\n @dev Emitted from `IColonyNetwork.createColony` function\n @param colonyId The colony id in the network\n @param colonyAddress The colony address in the network",
            "id": 5786,
            "name": "ColonyAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5782,
                  "indexed": true,
                  "name": "colonyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5786,
                  "src": "1190:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5784,
                  "indexed": true,
                  "name": "colonyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5786,
                  "src": "1216:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:57:13"
            },
            "src": "1172:75:13"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new skill is added\n @dev Emitted from `IColonyNetwork.addSkill` function\n @param skillId The skill id\n @param parentSkillId The id of the parent skill under which this new skill is added",
            "id": 5792,
            "name": "SkillAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5788,
                  "indexed": false,
                  "name": "skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5792,
                  "src": "1504:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5790,
                  "indexed": false,
                  "name": "parentSkillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5792,
                  "src": "1521:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1503:40:13"
            },
            "src": "1487:57:13"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new auction is created and started\n @dev Emitted from `IColonyNetwork.startTokenAuction` function\n @param auction Address of the created auction contract\n @param token Address of the token for auction\n @param quantity Quantity of `token` to auction",
            "id": 5800,
            "name": "AuctionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5794,
                  "indexed": false,
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1872:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5796,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1889:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5798,
                  "indexed": false,
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1904:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1871:50:13"
            },
            "src": "1851:71:13"
          },
          {
            "body": null,
            "documentation": "@notice Get the Meta Colony address\n @return The Meta colony address, if no colony was found, returns 0x0",
            "id": 5805,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMetaColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "2089:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2088:9:13"
            },
            "scope": 5976,
            "src": "2043:55:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of colonies in the network\n @return The colony count",
            "id": 5810,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColonyCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2212:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5808,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5810,
                  "src": "2236:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2235:9:13"
            },
            "scope": 5976,
            "src": "2189:56:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new skill to the global or local skills tree, under skill `_parentSkillId`\n Only the Meta Colony is allowed to add a global skill, called via `IColony.addGlobalSkill`\n Any colony is allowed to add a local skill and which is associated with a new domain via `IColony.addDomain`\n @dev Errors if the parent skill does not exist or if this is called by an unauthorised sender\n @param _parentSkillId Id of the skill under which the new skill will be added\n @param _globalSkill true if the new skill is global, false if it is local\n @return Id of the added skill",
            "id": 5819,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5812,
                  "name": "_parentSkillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2875:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5814,
                  "name": "_globalSkill",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2899:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:43:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5817,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2934:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2933:9:13"
            },
            "scope": 5976,
            "src": "2857:86:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the `nParents` and `nChildren` of skill with id `_skillId`\n @param _skillId Id of the skill\n @return uint256 `skill.nParents` i.e. the number of parent skills of skill with id `_skillId`\n @return uint256 `skill.nChildren` i.e. the number of child skills of skill with id `_skillId`",
            "id": 5828,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5821,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3280:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3279:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3319:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5826,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3328:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3318:18:13"
            },
            "scope": 5976,
            "src": "3262:75:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Checks if skill with id `_skillId` is a global skill\n @param _skillId Id of the skill\n @return true if skill with id `_skillId` is a global skill, false otherwise",
            "id": 5835,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isGlobalSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5830,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3551:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3550:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5833,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3590:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3589:6:13"
            },
            "scope": 5976,
            "src": "3528:68:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a reputation update entry to log\n @dev Errors if it is called by anyone but a colony or if skill with id `_skillId` does not exist or\n @param _user The address of the user for the reputation update\n @param _amount The amount of reputation change for the update, this can be a negative as well as a positive value\n @param _skillId The skill for the reputation update",
            "id": 5844,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "appendReputationUpdateLog",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5837,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4040:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5839,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4055:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5838,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5841,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4071:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4039:49:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:13"
            },
            "scope": 5976,
            "src": "4005:91:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of skills in the network including both global and local skills\n @return The skill count",
            "id": 5849,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSkillCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4245:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5847,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5849,
                  "src": "4269:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4269:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:9:13"
            },
            "scope": 5976,
            "src": "4223:55:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the root global skill\n @dev This is set once when the Meta Colony is created\n @return The root global skill id",
            "id": 5854,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getRootGlobalSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4460:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5854,
                  "src": "4484:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4483:9:13"
            },
            "scope": 5976,
            "src": "4431:62:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Create the Meta Colony, same as a normal colony plus the root skill\n @param _tokenAddress Address of the CLNY token",
            "id": 5859,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createMetaColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5856,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "4658:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4658:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4657:23:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4687:0:13"
            },
            "scope": 5976,
            "src": "4632:56:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Creates a new colony in the network\n Note that the token ownership (if there is one) has to be transferred to the newly created colony\n @param _tokenAddress Address of an ERC20 token to serve as the colony token\n Additionally token can optionally support `mint` as defined in `ERC20Extended`\n Support for `mint` in mandatory only for the Meta Colony Token\n @return Address of the newly created colony",
            "id": 5866,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5866,
                  "src": "5154:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5153:23:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5864,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5866,
                  "src": "5193:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5192:9:13"
            },
            "scope": 5976,
            "src": "5132:70:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new Colony contract version and the address of associated `_resolver` contract. Secured function to authorised members\n @param _version The new Colony contract version\n @param _resolver Address of the `Resolver` contract which will be used with the underlying `EtherRouter` contract",
            "id": 5873,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addColonyVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5868,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5873,
                  "src": "5546:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5546:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5870,
                  "name": "_resolver",
                  "nodeType": "VariableDeclaration",
                  "scope": 5873,
                  "src": "5564:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5564:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5545:37:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5589:0:13"
            },
            "scope": 5976,
            "src": "5520:70:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get a colony address by its Id in the network\n @param _id Id of the colony to get\n @return The colony address, if no colony was found, returns 0x0",
            "id": 5880,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5875,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5880,
                  "src": "5784:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5783:13:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5880,
                  "src": "5818:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5817:9:13"
            },
            "scope": 5976,
            "src": "5765:62:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Returns the latest Colony contract version. This is the version used to create all new colonies\n @return The current / latest Colony contract version",
            "id": 5885,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentColonyVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6032:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5883,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5885,
                  "src": "6056:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6055:9:13"
            },
            "scope": 5976,
            "src": "6000:65:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Upgrades a colony with identifier: `_id` to a new Colony contract version `_newVersion`\n @dev Downgrades are not allowed, i.e. `_newVersion` should be higher than the currect colony version\n @param _id The colony identifier in the network\n @param _newVersion The target version for the upgrade",
            "id": 5892,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upgradeColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5887,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5892,
                  "src": "6415:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5889,
                  "name": "_newVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 5892,
                  "src": "6428:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5888,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6414:31:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6452:0:13"
            },
            "scope": 5976,
            "src": "6392:61:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the parent skill at index `_parentSkillIndex` for skill with Id `_skillId`\n @param _skillId Id of the skill\n @param _parentSkillIndex Index of the `skill.parents` array to get\n Note that not all parent skill ids are stored here. See `Skill.parents` member for definition on which parents are stored\n @return Skill Id of the requested parent skill",
            "id": 5901,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getParentSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5894,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6878:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6878:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5896,
                  "name": "_parentSkillIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6896:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6896:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6877:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5899,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6944:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6943:9:13"
            },
            "scope": 5976,
            "src": "6852:101:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the child skill at index `_childSkillIndex` for skill with Id `_skillId`\n @param _skillId Id of the skill\n @param _childSkillIndex Index of the `skill.children` array to get\n @return Skill Id of the requested child skill",
            "id": 5910,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getChildSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5903,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7246:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7246:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5905,
                  "name": "_childSkillIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7264:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7264:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7245:44:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5908,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7311:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7310:9:13"
            },
            "scope": 5976,
            "src": "7221:99:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the address of either the active or inactive reputation mining cycle, based on `active`. The active reputation mining cycle\n is the one currently under consideration by reputation miners. The inactive reputation cycle is the one with the log that is being appended to\n @param _active Whether the user wants the active or inactive reputation mining cycle\n @return address of active or inactive ReputationMiningCycle",
            "id": 5917,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationMiningCycle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5912,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "7806:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5911,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7806:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7805:14:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5915,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "7841:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7841:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7840:9:13"
            },
            "scope": 5976,
            "src": "7772:78:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the `Resolver` address for Colony contract version `_version`\n @param _version The Colony contract version\n @return Address of the `Resolver` contract",
            "id": 5924,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColonyVersionResolver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5919,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5924,
                  "src": "8067:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8067:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8066:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5924,
                  "src": "8106:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8106:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8105:9:13"
            },
            "scope": 5976,
            "src": "8033:82:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Allow a reputation miner to stake an `_amount` of CLNY tokens, which is required\n before they can submit a new reputation root hash via `ReputationMiningCycle.submitNewHash`\n @dev The Colony Network has to be authorised to transfer the `_amount` on behalf of the user prior to this call\n @param _amount Number of CLNY tokens to stake",
            "id": 5929,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5926,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5929,
                  "src": "8499:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8499:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8498:17:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8522:0:13"
            },
            "scope": 5976,
            "src": "8482:41:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Allow a user who has staked CLNY tokens to withdraw them\n @dev Errors if the user has submitted a new reputation root hash or backed one someone else submitted in the current mining cycle\n @param amount CLNY tokens amount to withdraw",
            "id": 5934,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5931,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "8803:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8803:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8802:16:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8825:0:13"
            },
            "scope": 5976,
            "src": "8785:41:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the amount of staked CLNY tokens for user `_user`\n @param _user Address of the user whose balance we want to get\n @return User stake balance",
            "id": 5941,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5936,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "9025:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9025:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9024:15:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5939,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "9061:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9061:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9060:9:13"
            },
            "scope": 5976,
            "src": "8999:71:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Set a new Reputation root hash and starts a new mining cycle. Can only be called by the ReputationMiningCycle contract.\n @param newHash The reputation root hash\n @param newNNodes The updated nodes count value\n @param stakers Array of users who submitted or backed the hash, being accepted here as the new reputation root hash",
            "id": 5951,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setReputationRootHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5943,
                  "name": "newHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9460:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5945,
                  "name": "newNNodes",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9477:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9477:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5948,
                  "name": "stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9496:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5946,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9496:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5947,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9496:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9459:55:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9521:0:13"
            },
            "scope": 5976,
            "src": "9429:93:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Starts a new Reputation Mining cycle. Explicitly called only the first time,\n subsequently called from within `setReputationRootHash`",
            "id": 5954,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startNextCycle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9702:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9711:0:13"
            },
            "scope": 5976,
            "src": "9679:33:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect\n @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n @param stakers Array of the addresses of stakers to punish",
            "id": 5960,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "punishStakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5957,
                  "name": "stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 5960,
                  "src": "10027:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5955,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10027:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5956,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "10027:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10026:19:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10052:0:13"
            },
            "scope": 5976,
            "src": "10004:49:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the root hash of the current reputation state tree\n @return bytes32 The current Reputation Root Hash",
            "id": 5965,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationRootHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10211:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5963,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5965,
                  "src": "10235:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10235:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10234:9:13"
            },
            "scope": 5976,
            "src": "10181:63:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of nodes in the current reputation state tree.\n @dev I cannot see a reason why a user's client would need to call this - only stored to help with some edge cases in reputation mining dispute resolution\n @return uint256 The number of nodes in the state tree",
            "id": 5970,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationRootHashNNodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10580:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5968,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5970,
                  "src": "10604:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10604:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10603:9:13"
            },
            "scope": 5976,
            "src": "10544:69:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Create and start a new `DutchAuction` for the entire amount of `_token` owned by the Colony Network\n @param _token Address of the token held by the network to be auctioned",
            "id": 5975,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startTokenAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5972,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5975,
                  "src": "10835:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10835:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10834:16:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10857:0:13"
            },
            "scope": 5976,
            "src": "10808:50:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5977,
        "src": "914:9946:13"
      }
    ],
    "src": "700:10161:13"
  },
  "legacyAST": {
    "absolutePath": "/root/intuition-machine/colonyNetwork/contracts/IColonyNetwork.sol",
    "exportedSymbols": {
      "IColonyNetwork": [
        5976
      ]
    },
    "id": 5977,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5779,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:13"
      },
      {
        "id": 5780,
        "literals": [
          "experimental",
          "v0.5.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "725:29:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Colony Network interface\n @notice All publicly available functions are available here and registered to work with EtherRouter Network contract",
        "fullyImplemented": false,
        "id": 5976,
        "linearizedBaseContracts": [
          5976
        ],
        "name": "IColonyNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new colony is added\n @dev Emitted from `IColonyNetwork.createColony` function\n @param colonyId The colony id in the network\n @param colonyAddress The colony address in the network",
            "id": 5786,
            "name": "ColonyAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5782,
                  "indexed": true,
                  "name": "colonyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5786,
                  "src": "1190:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5784,
                  "indexed": true,
                  "name": "colonyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5786,
                  "src": "1216:29:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:57:13"
            },
            "src": "1172:75:13"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new skill is added\n @dev Emitted from `IColonyNetwork.addSkill` function\n @param skillId The skill id\n @param parentSkillId The id of the parent skill under which this new skill is added",
            "id": 5792,
            "name": "SkillAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5788,
                  "indexed": false,
                  "name": "skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5792,
                  "src": "1504:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5790,
                  "indexed": false,
                  "name": "parentSkillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5792,
                  "src": "1521:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1503:40:13"
            },
            "src": "1487:57:13"
          },
          {
            "anonymous": false,
            "documentation": "@notice Event logged when a new auction is created and started\n @dev Emitted from `IColonyNetwork.startTokenAuction` function\n @param auction Address of the created auction contract\n @param token Address of the token for auction\n @param quantity Quantity of `token` to auction",
            "id": 5800,
            "name": "AuctionCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5794,
                  "indexed": false,
                  "name": "auction",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1872:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5796,
                  "indexed": false,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1889:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5798,
                  "indexed": false,
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 5800,
                  "src": "1904:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1871:50:13"
            },
            "src": "1851:71:13"
          },
          {
            "body": null,
            "documentation": "@notice Get the Meta Colony address\n @return The Meta colony address, if no colony was found, returns 0x0",
            "id": 5805,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMetaColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2065:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5805,
                  "src": "2089:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2088:9:13"
            },
            "scope": 5976,
            "src": "2043:55:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of colonies in the network\n @return The colony count",
            "id": 5810,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColonyCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2212:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5808,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5810,
                  "src": "2236:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2235:9:13"
            },
            "scope": 5976,
            "src": "2189:56:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new skill to the global or local skills tree, under skill `_parentSkillId`\n Only the Meta Colony is allowed to add a global skill, called via `IColony.addGlobalSkill`\n Any colony is allowed to add a local skill and which is associated with a new domain via `IColony.addDomain`\n @dev Errors if the parent skill does not exist or if this is called by an unauthorised sender\n @param _parentSkillId Id of the skill under which the new skill will be added\n @param _globalSkill true if the new skill is global, false if it is local\n @return Id of the added skill",
            "id": 5819,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5812,
                  "name": "_parentSkillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2875:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5814,
                  "name": "_globalSkill",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2899:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:43:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5817,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5819,
                  "src": "2934:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2933:9:13"
            },
            "scope": 5976,
            "src": "2857:86:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the `nParents` and `nChildren` of skill with id `_skillId`\n @param _skillId Id of the skill\n @return uint256 `skill.nParents` i.e. the number of parent skills of skill with id `_skillId`\n @return uint256 `skill.nChildren` i.e. the number of child skills of skill with id `_skillId`",
            "id": 5828,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5821,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3280:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3279:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3319:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5826,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5828,
                  "src": "3328:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3318:18:13"
            },
            "scope": 5976,
            "src": "3262:75:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Checks if skill with id `_skillId` is a global skill\n @param _skillId Id of the skill\n @return true if skill with id `_skillId` is a global skill, false otherwise",
            "id": 5835,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isGlobalSkill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5830,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3551:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3550:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5833,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "3590:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3590:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3589:6:13"
            },
            "scope": 5976,
            "src": "3528:68:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a reputation update entry to log\n @dev Errors if it is called by anyone but a colony or if skill with id `_skillId` does not exist or\n @param _user The address of the user for the reputation update\n @param _amount The amount of reputation change for the update, this can be a negative as well as a positive value\n @param _skillId The skill for the reputation update",
            "id": 5844,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "appendReputationUpdateLog",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5837,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4040:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5839,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4055:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5838,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5841,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5844,
                  "src": "4071:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4039:49:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:13"
            },
            "scope": 5976,
            "src": "4005:91:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of skills in the network including both global and local skills\n @return The skill count",
            "id": 5849,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSkillCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4245:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5847,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5849,
                  "src": "4269:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4269:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:9:13"
            },
            "scope": 5976,
            "src": "4223:55:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the root global skill\n @dev This is set once when the Meta Colony is created\n @return The root global skill id",
            "id": 5854,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getRootGlobalSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4460:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5854,
                  "src": "4484:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4483:9:13"
            },
            "scope": 5976,
            "src": "4431:62:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Create the Meta Colony, same as a normal colony plus the root skill\n @param _tokenAddress Address of the CLNY token",
            "id": 5859,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createMetaColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5856,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5859,
                  "src": "4658:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4658:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4657:23:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4687:0:13"
            },
            "scope": 5976,
            "src": "4632:56:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Creates a new colony in the network\n Note that the token ownership (if there is one) has to be transferred to the newly created colony\n @param _tokenAddress Address of an ERC20 token to serve as the colony token\n Additionally token can optionally support `mint` as defined in `ERC20Extended`\n Support for `mint` in mandatory only for the Meta Colony Token\n @return Address of the newly created colony",
            "id": 5866,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5861,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5866,
                  "src": "5154:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5153:23:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5864,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5866,
                  "src": "5193:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5192:9:13"
            },
            "scope": 5976,
            "src": "5132:70:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Adds a new Colony contract version and the address of associated `_resolver` contract. Secured function to authorised members\n @param _version The new Colony contract version\n @param _resolver Address of the `Resolver` contract which will be used with the underlying `EtherRouter` contract",
            "id": 5873,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addColonyVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5868,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5873,
                  "src": "5546:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5546:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5870,
                  "name": "_resolver",
                  "nodeType": "VariableDeclaration",
                  "scope": 5873,
                  "src": "5564:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5564:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5545:37:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5589:0:13"
            },
            "scope": 5976,
            "src": "5520:70:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get a colony address by its Id in the network\n @param _id Id of the colony to get\n @return The colony address, if no colony was found, returns 0x0",
            "id": 5880,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5875,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5880,
                  "src": "5784:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5783:13:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5880,
                  "src": "5818:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5817:9:13"
            },
            "scope": 5976,
            "src": "5765:62:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Returns the latest Colony contract version. This is the version used to create all new colonies\n @return The current / latest Colony contract version",
            "id": 5885,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentColonyVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6032:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5883,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5885,
                  "src": "6056:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6055:9:13"
            },
            "scope": 5976,
            "src": "6000:65:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Upgrades a colony with identifier: `_id` to a new Colony contract version `_newVersion`\n @dev Downgrades are not allowed, i.e. `_newVersion` should be higher than the currect colony version\n @param _id The colony identifier in the network\n @param _newVersion The target version for the upgrade",
            "id": 5892,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upgradeColony",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5887,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5892,
                  "src": "6415:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5889,
                  "name": "_newVersion",
                  "nodeType": "VariableDeclaration",
                  "scope": 5892,
                  "src": "6428:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5888,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6414:31:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6452:0:13"
            },
            "scope": 5976,
            "src": "6392:61:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the parent skill at index `_parentSkillIndex` for skill with Id `_skillId`\n @param _skillId Id of the skill\n @param _parentSkillIndex Index of the `skill.parents` array to get\n Note that not all parent skill ids are stored here. See `Skill.parents` member for definition on which parents are stored\n @return Skill Id of the requested parent skill",
            "id": 5901,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getParentSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5894,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6878:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6878:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5896,
                  "name": "_parentSkillIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6896:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6896:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6877:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5899,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "6944:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6943:9:13"
            },
            "scope": 5976,
            "src": "6852:101:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the id of the child skill at index `_childSkillIndex` for skill with Id `_skillId`\n @param _skillId Id of the skill\n @param _childSkillIndex Index of the `skill.children` array to get\n @return Skill Id of the requested child skill",
            "id": 5910,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getChildSkillId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5903,
                  "name": "_skillId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7246:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7246:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5905,
                  "name": "_childSkillIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7264:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7264:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7245:44:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5908,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "7311:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7311:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7310:9:13"
            },
            "scope": 5976,
            "src": "7221:99:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the address of either the active or inactive reputation mining cycle, based on `active`. The active reputation mining cycle\n is the one currently under consideration by reputation miners. The inactive reputation cycle is the one with the log that is being appended to\n @param _active Whether the user wants the active or inactive reputation mining cycle\n @return address of active or inactive ReputationMiningCycle",
            "id": 5917,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationMiningCycle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5912,
                  "name": "_active",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "7806:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5911,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7806:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7805:14:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5915,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "7841:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7841:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7840:9:13"
            },
            "scope": 5976,
            "src": "7772:78:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the `Resolver` address for Colony contract version `_version`\n @param _version The Colony contract version\n @return Address of the `Resolver` contract",
            "id": 5924,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getColonyVersionResolver",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5919,
                  "name": "_version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5924,
                  "src": "8067:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8067:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8066:18:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5924,
                  "src": "8106:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8106:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8105:9:13"
            },
            "scope": 5976,
            "src": "8033:82:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Allow a reputation miner to stake an `_amount` of CLNY tokens, which is required\n before they can submit a new reputation root hash via `ReputationMiningCycle.submitNewHash`\n @dev The Colony Network has to be authorised to transfer the `_amount` on behalf of the user prior to this call\n @param _amount Number of CLNY tokens to stake",
            "id": 5929,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5926,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5929,
                  "src": "8499:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8499:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8498:17:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8522:0:13"
            },
            "scope": 5976,
            "src": "8482:41:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Allow a user who has staked CLNY tokens to withdraw them\n @dev Errors if the user has submitted a new reputation root hash or backed one someone else submitted in the current mining cycle\n @param amount CLNY tokens amount to withdraw",
            "id": 5934,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5931,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "8803:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8803:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8802:16:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8825:0:13"
            },
            "scope": 5976,
            "src": "8785:41:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the amount of staked CLNY tokens for user `_user`\n @param _user Address of the user whose balance we want to get\n @return User stake balance",
            "id": 5941,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getStakedBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5936,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "9025:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9025:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9024:15:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5939,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "9061:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9061:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9060:9:13"
            },
            "scope": 5976,
            "src": "8999:71:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Set a new Reputation root hash and starts a new mining cycle. Can only be called by the ReputationMiningCycle contract.\n @param newHash The reputation root hash\n @param newNNodes The updated nodes count value\n @param stakers Array of users who submitted or backed the hash, being accepted here as the new reputation root hash",
            "id": 5951,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setReputationRootHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5943,
                  "name": "newHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9460:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5945,
                  "name": "newNNodes",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9477:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9477:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5948,
                  "name": "stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 5951,
                  "src": "9496:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5946,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9496:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5947,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9496:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9459:55:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9521:0:13"
            },
            "scope": 5976,
            "src": "9429:93:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Starts a new Reputation Mining cycle. Explicitly called only the first time,\n subsequently called from within `setReputationRootHash`",
            "id": 5954,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startNextCycle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9702:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9711:0:13"
            },
            "scope": 5976,
            "src": "9679:33:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect\n @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n @param stakers Array of the addresses of stakers to punish",
            "id": 5960,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "punishStakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5957,
                  "name": "stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 5960,
                  "src": "10027:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5955,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10027:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5956,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "10027:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10026:19:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10052:0:13"
            },
            "scope": 5976,
            "src": "10004:49:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the root hash of the current reputation state tree\n @return bytes32 The current Reputation Root Hash",
            "id": 5965,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationRootHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10211:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5963,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5965,
                  "src": "10235:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5962,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10235:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10234:9:13"
            },
            "scope": 5976,
            "src": "10181:63:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get the number of nodes in the current reputation state tree.\n @dev I cannot see a reason why a user's client would need to call this - only stored to help with some edge cases in reputation mining dispute resolution\n @return uint256 The number of nodes in the state tree",
            "id": 5970,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getReputationRootHashNNodes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10580:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5968,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5970,
                  "src": "10604:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10604:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10603:9:13"
            },
            "scope": 5976,
            "src": "10544:69:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Create and start a new `DutchAuction` for the entire amount of `_token` owned by the Colony Network\n @param _token Address of the token held by the network to be auctioned",
            "id": 5975,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "startTokenAuction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5972,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5975,
                  "src": "10835:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10835:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10834:16:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 5974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10857:0:13"
            },
            "scope": 5976,
            "src": "10808:50:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5977,
        "src": "914:9946:13"
      }
    ],
    "src": "700:10161:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-20T09:03:27.560Z"
}